{"version":3,"sources":["components/navigation/Navigation.js","components/faceRecognition/FaceRecognition.js","components/logo/brain.png","components/logo/Logo.js","components/signIn/SignIn.js","components/rank/Rank.js","components/register/Register.js","components/imageLinkForm/ImageLinkForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","className","style","display","justifyContent","onClick","FaceRecognition","imageUrl","box","id","src","alt","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","options","max","brain","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","type","name","onChange","Component","Rank","entries","Register","onNameChange","ImageLinkForm","onInputChange","onButtonSubmit","particlesOptions","particles","number","density","enable","value_area","color","line_linked","enable_auto","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3aebbb13.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) =>{\r\n        if (isSignedIn){\r\n            return(\r\n        <nav className=\"nav\" style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <p onClick={() => onRouteChange('SignOut')} className='f3 link dim black underline pa3 pointer'>Sign out</p>\r\n        </nav>\r\n            );\r\n        } else {\r\n            return(\r\n                <nav className=\"nav\" style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('SignIn')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                    <p onClick={() => onRouteChange('Register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n                </nav>\r\n            );\r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return(\r\n        <div className=\"center\">\r\n            <div className=\"faceRecognition-wrapper\">\r\n                <img id=\"inputImage\" src={imageUrl} alt=\"\" width='500px' height='auto'/>\r\n                <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left:box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;","export default __webpack_public_path__ + \"static/media/brain.da59baac.png\";","import React from 'react';\r\nimport brain from './brain.png';\r\nimport Tilt from 'react-tilt'\r\nimport './Logo.css'\r\n\r\nconst Logo = () =>{\r\n    return(\r\n        <div>\r\n            <Tilt className=\"Tilt\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\">\r\n                    <img src={brain} alt=\"logo\" />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\nexport default Logo;","import React, { Component } from 'react';\r\nimport './SignIn.css'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            signInEmail: \"\",\r\n            signInPassword: \"\"\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://smart-brain-faceapp1.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: {'content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email : this.state.signInEmail,\r\n                password : this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user)\r\n                this.props.onRouteChange('home')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props\r\n        return(\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\"\r\n                                    onChange={this.onEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={this.onPasswordChange}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Sign in\"\r\n                                onClick={this.onSubmitSignIn}\r\n                            />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './Rank.css'\r\n\r\nconst Rank = ({name, entries}) =>{\r\n    return(\r\n        <div>\r\n            <div className=\"rankText\">\r\n                {`${name}, your current entry count is ...`}\r\n            </div>\r\n            <div className=\"rankValue\">\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Rank;","import React, { Component } from 'react';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            name: \"\"\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://smart-brain-faceapp1.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: {'content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email : this.state.email,\r\n                password : this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user)\r\n                this.props.onRouteChange('home')\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    onChange={this.onNameChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\"\r\n                                    onChange={this.onEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={this.onPasswordChange}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Register\"\r\n                                onClick={this.onSubmitSignIn}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) =>{\r\n    return(\r\n        <div>\r\n            <p>\r\n                {'This Magic Brain app will detect faces in your pictures. Give it a try!'}\r\n            </p>\r\n            <div className=\"center\">\r\n                <input type=\"text\" onChange={onInputChange} />\r\n                <button onClick={onButtonSubmit}>Detect</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ImageLinkForm;","import React, { Component } from 'react';\nimport Navigation from './components/navigation/Navigation'\nimport FaceRecognition from './components/faceRecognition/FaceRecognition'\nimport Logo from './components/logo/Logo'\nimport SignIn from './components/signIn/SignIn'\nimport Rank from './components/rank/Rank'\nimport Register from './components/register/Register'\nimport Particles from 'react-particles-js';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm'\nimport './App.css';\n\n\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 10,\n      density: {\n        enable: true,\n        value_area: 600,\n      }\n    },\n    color: {\n      value: \"red\"\n    }\n  },\n  line_linked:{\n    enable_auto: true,\n  }\n}\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  box: {},\n  route: 'SignIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n}\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById(\"inputImage\")\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value})\n  }\n\n  onButtonSubmit = () =>{\n    this.setState({imageUrl: this.state.input})\n    fetch('https://smart-brain-faceapp1.herokuapp.com/imageurl', { //fetch for api call to clarifai on server.js [done on the back end to hide the api key]\n      method: 'post',\n      headers: {'content-Type': 'application/json'},\n      body: JSON.stringify({\n          input : this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then( response => { // get the response which gets passed into the calculateFaceLocation function which in turn returns an object which gets passed into the displayFaceBox function to apply the result to the box state\n      if (response) {\n        fetch('https://smart-brain-faceapp1.herokuapp.com/image', {\n          method: 'put',\n          headers: {'content-Type': 'application/json'},\n          body: JSON.stringify({\n              id : this.state.user.id,\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count }))\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err)) //catch any error and console log the error\n  }\n\n  onRouteChange = (route) =>{\n    if (route === 'SignOut'){\n      this.setState(initialState)\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render(){\n    const { isSignedIn, imageUrl, route, box } = this.state // destructure states to avoid having to repeatedly type this.state.\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home'\n          ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n          : ( route === 'SignIn'\n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}